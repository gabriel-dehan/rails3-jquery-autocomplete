/*
* Unobtrusive autocomplete
*
* To use it, you just have to include the HTML attribute autocomplete
* with the autocomplete URL as the value
*
*   Example:
*       <input type="text" data-autocomplete="/url/to/autocomplete">
*
* Optionally, you can use a jQuery selector to specify a field that can
* be updated with the element id whenever you find a matching value
*
*   Example:
*       <input type="text" data-autocomplete="/url/to/autocomplete" data-id-element="#id_field">
*/
(function(e){function n(e,t){for(var n in t){if(e[n]===undefined)e[n]=t[n]}return e}e.fn.caretPosition=function(){el=this[0];if(el.selectionStart){return el.selectionStart}else if(document.selection){el.focus();var e=document.selection.createRange();if(e==null){return 0}var t=el.createTextRange(),n=t.duplicate();t.moveToBookmark(e.getBookmark());n.setEndPoint("EndToStart",t);return n.text.length}return 0};var t=null;e.fn.railsAutocomplete=function(t){return this.on("focus",function(){if(!this.railsAutoCompleter){this.railsAutoCompleter=new e.railsAutocomplete(this,t)}})};e.railsAutocomplete=function(e,t){_e=e;e.options=n(t,railsAutocompleteConfig.DEFAULT_OPTIONS);this.init(_e)};e.railsAutocomplete.fn=e.railsAutocomplete.prototype={railsAutocomplete:"0.0.1"};e.railsAutocomplete.configuration={createWithDefaults:true};e.railsAutocomplete.fn.extend=e.railsAutocomplete.extend=e.extend;e.railsAutocomplete.fn.extend({init:function(t){t.options.delimiter=t.options.delimiter||e(t).attr("data-delimiter")||null;t.options.url=t.options.url||e(t).attr("data-autocomplete");railsAutocompleteTag.init(t);if(t.options.withText){if(!t.options.delimiter){throw"When working with joined text, autocomplete rails needs a delimiter to be defined."}railsAutocompleteTag.autocomplete(t.options.delimiter)}else{railsAutocompleteTag.autocomplete()}}});e(document).ready(function(){if(e.railsAutocomplete.configuration.createWithDefaults){e("input[data-autocomplete]").railsAutocomplete({delimiter:",",insertDelimiter:true,focusOnNext:true});e("textarea[data-autocomplete]").railsAutocomplete({delimiter:",",insertDelimiter:true})}})})(jQuery);var railsAutocompleteTag=function(){function n(n){t=n;e=railsAutocompleteConfig.autocompleteCallbacks(t)}function r(n){if(n){i(n)}else{jQuery(t).autocomplete(e)}}function i(n){var r=n.charCodeAt(0),i=null;jQuery(t).on("keypress",function(n){if(n.which===r){if(null===i){i=jQuery(t).autocomplete(e)}else{jQuery(t).autocomplete("enable")}}else if(n.which===",".charCodeAt(0)){jQuery(t).autocomplete("disable")}})}var e,t;return{init:n,autocomplete:r}}();var railsAutocompleteConfig=function(){function e(e){e.helpers=new _railsAutocompleteHelpers(e);return{source:function(t,n){jQuery.getJSON(e.options.url,{term:e.helpers.extractCurrent(t.term)},function(t){if(arguments[0].length==0){arguments[0]=[];arguments[0][0]={id:"",label:"no existing match"}}jQuery(arguments[0]).each(function(t,n){var r={};r[n.id]=n;jQuery(e).data(r)});n.apply(null,arguments)})},change:function(e,t){if(jQuery(jQuery(this).attr("data-id-element")).val()==""){return}jQuery(jQuery(this).attr("data-id-element")).val(t.item?t.item.id:"");var n=jQuery.parseJSON(jQuery(this).attr("data-update-elements")),r=t.item?jQuery(this).data(t.item.id.toString()):{};if(n&&jQuery(n["id"]).val()==""){return}for(var i in n){jQuery(n[i]).val(t.item?r[i]:"")}},search:function(){var t=e.helpers.extractCurrent(this.value);if(t.length<2){return false}},focus:function(){return false},close:function(){if(e.options.withText){jQuery(this).autocomplete("disable");jQuery(this).focus().trigger(jQuery.Event("keypress",{which:13}))}},select:function(t,n){var r=e.helpers.split(this.value);r[e.helpers.currentTermIndex(r)]=n.item.value;if(this.options.delimiter!=null){r=jQuery.map(r,function(e,t){if(!(e==""||e==" ")){return jQuery.trim(e)}});if(this.options.insertDelimiter==true){if(this.options.delimiterPosition==="after"){r.push("")}}this.value=e.helpers.getValue(r)}else{this.value=r.join("");if(jQuery(this).attr("data-id-element")){jQuery(jQuery(this).attr("data-id-element")).val(n.item.id)}if(jQuery(this).attr("data-update-elements")){var i=jQuery(this).data(n.item.id.toString());var s=jQuery.parseJSON(jQuery(this).attr("data-update-elements"));for(var o in s){jQuery(s[o]).val(i[o])}}}var u=this.value;jQuery(this).bind("keyup.clearId",function(){if(jQuery(this).val().trim()!=u.trim()){jQuery(jQuery(this).attr("data-id-element")).val("");jQuery(this).unbind("keyup.clearId")}});jQuery(e).trigger("railsAutocomplete.select",n);if(t.keyCode===9&&!e.options.focusOnNext){t.preventDefault();jQuery(e).focus()}return false}}}function t(){return{delimiter:null,delimiterPosition:"after",insertDelimiter:false,focusOnNext:false,url:null,withText:false,filter:null}}return{autocompleteCallbacks:e,DEFAULT_OPTIONS:t()}}();_railsAutocompleteHelpers=function(e){this.options=e.options;this.element=e};_railsAutocompleteHelpers.prototype={split:function(e){return e.split(this.options.delimiter)},leftJoin:function(e,t){var n="";for(var r=0;r<e.length;r++){n+=t+e[r]}return n},join:function(e,t){return this.options.delimiterPosition==="after"?e.join(t):this.leftJoin(e,t)},findTermIn:function(e,t){var n=jQuery(this.element).caretPosition(),r=0,i=0;i=e.join("").length;if(n>i){n=i}else if(n<0){n=0}for(var s=0;s<e.length;s++){r+=e[s].length;if(n<=r){return t?s:e[s]}}},extractLast:function(e){return this.split(e).pop().replace(/^\s+/,"")},extractCurrent:function(e,t){var n=this.split(e),e="";if(this.options.filter){e=this.options.filter.call(this.element,this.findTermIn(n,true),n)}else{e=this.findTermIn(n)}return e.replace(/^\s+/,"")},currentTermIndex:function(e){return this.findTermIn(e,true)},delimiter:function(){var e="";e+=this.options.delimiterPosition==="before"?" ":"";e+=this.options.delimiter;e+=this.options.delimiterPosition==="after"?" ":"";return e},firstTerm:function(e){var t=null;if(this.options.withText){if(this.element.value[0]!==this.options.delimiter){t=e.shift()}}return t},getValue:function(e){var t=this.firstTerm(e);value=this.join(e,this.delimiter());if(this.options.insertDelimiter==false){value+=" "}if(t){value=t+value}else if(this.options.delimiterPosition==="before"){value=value.substring(1)}return value}}
